source("Телефоны.xlsx")
source("Телефоны.xlsx")
source("phones.xlsx")
install.packages("writexl")
getwd()
read.table("phones.xlsx")
read.table(source("phones.xlsx"))
read.xlsx("phones.xlsx")
read.table("tphones.xlsx")
getwd()
read.table("tphones.xlsx")
read.table("tphones.txt")
read.table("tphones.txt")
read.table("tphones.txt")
getwd()
source("phones.csv")
table <- read.table("phones.csv")
View(table)
phones <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
View(phones)
table <- read.table("phones.csv", encoding = "UTF-8")
View(table)
table <- read.table("phones.csv", encoding = "UTF-8")
View(table)
phones <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
View(phones)
phones <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
phones <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
plot(phones)
plot(data.frame(phones))
names(w) <- phones[0,]
names <- phones[0,]
names
phone_names <- phones[0,]
people_names <- phones[,0]
people_names
people_names <- phones[ ,0]
people_names <- phones[ ,0]
people_names
people_names
m <- matrix (x , nrow = 10 , ncol = 10)
x <- c(sample(0:9, 100, replace = TRUE))
m <- matrix (x , nrow = 10 , ncol = 10)
m
people_names <- phones[,0]
people_names
table(phones)
phones.f<-factor(phones)
phones.f
plot(phones.f)
phone_names <- phones[0,]
names(phones)
people_names <- phones[,0]
people_names
phones[,1]
applay(phones,2,mean)
apply(phones,2,mean)
plot(apply(phones,2,mean))
apply(phones,1,mean)
t <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
t1=t[,2:12]
min_a<-c(apply(t,2,min))[2:11]#Минимальное
print(min_a)
max_a<-c(apply(t,2,max))[2:11]#Максимальное
print(max_a)
mean<-colMeans(t1)
print(mean)
sort(apply(t1, 2, mean))#Вывод в порядке убывания
m=function(t1){length(t1[t1>7 | t1<3])}
X=(apply(t1, 2, m))
print(X)
barplot(mean)
View(t)
t1=t[,2:11]
min_a<-c(apply(t,2,min))[2:11]#Минимальное
print(min_a)
max_a<-c(apply(t,2,max))[2:11]#Максимальное
print(max_a)
mean<-colMeans(t1)
print(mean)
sort(apply(t1, 2, mean))#Вывод в порядке убывания
m=function(t1){length(t1[t1>7 | t1<3])}
X=(apply(t1, 2, m))
print(X)
barplot(mean)
t <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
t1=t[,2:11]
min_a<-c(apply(t,2,min))[2:11] #Минимальное
print(min_a)
max_a<-c(apply(t,2,max))[2:11] #Максимальное
print(max_a)
mean<-colMeans(t1)
print(mean)
sort(apply(t1, 2, mean)) #Вывод в порядке убывания
m=function(t1){length(t1[t1>7 | t1<3])}
X=(apply(t1, 2, m))
print(X)
barplot(mean)
barplot(X)
print(X)
barplot(mean)
install.packages('gsheet')
library(gsheet)
t=gsheet2tbl('https://docs.google.com/spreadsheets/d/1bSTi99qefPm2ox_Zua7x7PIcMNwOECOqRBZrADHNal0/edit#gid=1863356207')
t
t1=t[,2:12]
min_a<-c(apply(t,2,min))[2:11]#Минимальное
print(min_a)
max_a<-c(apply(t,2,max))[2:11]#Максимальное
print(max_a)
mean<-colMeans(t1)
print(mean)
sort(apply(t1, 2, mean))#Вывод в порядке убывания
m=function(t1){length(t1[t1>7 | t1<3])}
X=(apply(t1, 2, m))
print(X)
barplot(mean)
t <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
t1=t[,2:11]
min_a<-c(apply(t,2,min))[2:11] #Минимальное по каждому столбцу
print(min_a)
max_a<-c(apply(t,2,max))[2:11] #Максимальное по каждому столбцу
print(max_a)
mean<-colMeans(t1) #Среднее по каждому столбцу
print(mean)
t <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
t1=t[,2:11]
min_a<-c(apply(t,2,min))[2:11] #Минимальное по каждому столбцу
print(min_a)
max_a<-c(apply(t,2,max))[2:11] #Максимальное по каждому столбцу
print(max_a)
mean<-round(colMeans(t1)) #Среднее по каждому столбцу
print(mean)
sort(apply(t1, 2, mean)) #Вывод в порядке убывания
sort(round(apply(t1, 2, mean))) #Вывод в порядке убывания
m=function(t1){length(t1[t1>7 | t1<3])} # количество людей, отдавших предпочтение >0.7 и <0.3 (составить вектор)
X=(apply(t1, 2, m))
print(X)
print(X)
barplot(mean)
barplot(X)
barplot(mean)
barplot(X)
View(t1)
View(t)
X=(apply(t1, 2, m))
print(X)
t <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
t1=t[,2:11]
#Минимальное по каждому столбцу
min_a<-c(apply(t,2,min))[2:11]
print(min_a)
#Максимальное по каждому столбцу
max_a<-c(apply(t,2,max))[2:11]
print(max_a)
#Среднее по каждому столбцу
mean<-round(colMeans(t1))
print(mean)
#Вывод в порядке убывания
sort(round(apply(t1, 2, mean)))
# количество людей, отдавших предпочтение >7 и <3 (составить вектор)
m=function(t1){length(t1[t1>7 | t1<3])}
X=(apply(t1, 2, m)) # 2 indicates columns
print(X)
barplot(mean)
#Вывод в порядке убывания
sort(round(apply(t1, 2, mean)))
#Вывод в порядке убывания
sort(apply(t1, 2, mean))
barplot(sort(apply(t1, 2, mean)))
hist(X)
barplot(mean)
hist(mean)
View(t1)
X
x1 <- X[6.5 > X]
x1
x1 <- X[6.5 > X] && X[7 < X]
x1 <- X[6.5 > X] && X[7 < X]
x1
x1 <- mean[6.5 > X] && mean[7 < X]
x1
mean
barplot(mean)
hist(mean)
t <- read.csv("~/R-BigData/phones.csv", encoding="UTF-8", sep=";")
t1=t[,2:11]
#Среднее по каждому столбцу
mean<-round(colMeans(t1))
#Вывод в порядке убывания
sort(apply(t1, 2, mean))
medals_16<-c(0,0,1,0,0,0,0,1)
medals_12<-c(0,0,0,1,1,0,0,0)
medals_08<-c(1,0,1,0,0,0,0,0)
medals_04<-c(3,0,0,0,1,0,0,0)
medals_00<-c(3,0,0,0,1,1,0,0)
all_medals<-c(sum(medals_00),sum(medals_04),sum(medals_08),sum(medals_12),sum(medals_16))
names(all_medals)<-c('2000', '2004', '2008', '2012', '2016')
barplot(all_medals,ylab = 'Количество мест (1-8)',xlab = 'Год',main = 'Призовые vеста сборной Румынии по академической гребле за последние 20 лет',col.main = '#7a706d',col.lab = '#7a706d',font.lab = 2,border = 'black',col = '#6df431',cex.lab = 1.1,cex.main = 1.2)
#-----#
gold_medals <- c(0,0,1,3,3)
names(gold_medals)<-c('2000', '2004', '2008', '2012', '2016')
pie(gold_medals, cex = 0.6, radius = 1, main = "Количество первых мест за последние 20 лет")
#-----#
medals_g<-c(1,4,0,1,2,0)
medals_s<-c(1,0,2,1,0,0)
medals_b<-c(0,0,1,0,0,0)
Yea=c("1998", "2002", "2006","2010", "2014","2018")
plot(Yea, medals_g,type='b',ylim = c(0, 4),
pch=17,
cex = 0.8,
col = '#F9ED2E',
xaxt='n',   ylab = 'Количество золотых медалей',
xlab = 'Года',
main = 'мейн',
cex.lab = 1.1,
cex.main = 1.4,
col.main = 'black',
col.lab = 'black')
axis(1, at=Yea, labels=c("1998", "2002", "2006","2010", "2014","2018"))
lines(Yea, medals_s, type='b', pch = 18, cex = 0.8, col = '#868686')
lines(Yea, medals_b, type='b', pch = 19, cex = 0.8, col = '#EA9C04')
lbl = c('Золото','Серебро', 'Бронза')
color = c("#F9ED2E","#868686", "#EA9C04")
legend("topleft",
title = 'Медали',
lbl,lty=c(1,1,1),
pch=c(17,18,19),
col = color,
text.width = 1.5,
bg ="#3d4343")
medals_16<-c(0,0,1,0,0,0,0,1)
medals_12<-c(0,0,0,1,1,0,0,0)
medals_08<-c(1,0,1,0,0,0,0,0)
medals_04<-c(3,0,0,0,1,0,0,0)
medals_00<-c(3,0,0,0,1,1,0,0)
medals_00<-c(3,0,0,0,1,1,0,0)
all_medals<-c(sum(medals_00),sum(medals_04),sum(medals_08),sum(medals_12),sum(medals_16))
names(all_medals)<-c('2000', '2004', '2008', '2012', '2016')
barplot(all_medals,ylab = 'Количество мест (1-8)',xlab = 'Год',main = 'Призовые vеста сборной Румынии по академической гребле за последние 20 лет',col.main = '#7a706d',col.lab = '#7a706d',font.lab = 2,border = 'black',col = '#6df431',cex.lab = 1.1,cex.main = 1.2)
#-----#
gold_medals <- c(0,0,1,3,3)
names(gold_medals)<-c('2000', '2004', '2008', '2012', '2016')
pie(gold_medals, cex = 0.6, radius = 1, main = "Количество первых мест за последние 20 лет")
#-----#
medals_g<-c(1,4,0,1,2,0)
medals_s<-c(1,0,2,1,0,0)
medals_b<-c(0,0,1,0,0,0)
Yea=c("1998", "2002", "2006","2010", "2014","2018")
plot(Yea, medals_g,type='b',ylim = c(0, 4),
pch=17,
cex = 0.8,
col = '#F9ED2E',
xaxt='n',   ylab = 'Количество золотых медалей',
xlab = 'Года',
main = 'мейн',
cex.lab = 1.1,
cex.main = 1.4,
col.main = 'black',
col.lab = 'black')
axis(1, at=Yea, labels=c("1998", "2002", "2006","2010", "2014","2018"))
lines(Yea, medals_s, type='b', pch = 18, cex = 0.8, col = '#868686')
lines(Yea, medals_b, type='b', pch = 19, cex = 0.8, col = '#EA9C04')
x <- c(sample(0:9, 100, replace = TRUE))
m <- matrix (x , nrow = 10 , ncol = 10)
m
nm <-c()
subset(m == 0)
indexes = which(m == 0, arr.ind = TRUE)
ind
t(m)
ind<-seq(0,nrow(indexes),2)
newm <- indexes[ind, ]
newm
arr.ind
